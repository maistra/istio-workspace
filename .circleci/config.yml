defaults:
  golang-install: &golang-install
    name: "Installs latest Golang"
    command: |
      sudo rm -rf /usr/local/go
      sudo circleci-install golang 1.13.5
  docker:
    - image: &golang-img circleci/golang:1.13.5
  machine-conf: &machine-conf
    image: ubuntu-1604:201903-01
  env-vars: &env-vars
    GOPATH: /home/circleci/.go_workspace
    IKE_CLUSTER_DIR: "/home/circleci/cached-openshift-cluster"
    IKE_E2E_KEEP_NS: "false"
    IKE_E2E_MANAGE_CLUSTER: "false"
version: 2.1
jobs:

  ## Regular build running unit tests and linters
  build:
    working_directory: /go/src/github.com/maistra/istio-workspace
    docker:
      - image: *golang-img
    steps:
      - checkout
      - restore_cache:
          keys:
            - golang-deps-cache-{{ checksum "Gopkg.lock" }}
      - run:
          name: "Runs the build"
          command: make build-ci
      - save_cache:
          key: golang-deps-cache-{{ checksum "Gopkg.lock" }}
          paths:
            - ./vendor

  ## End-to-end testing involving OpenShift cluster with Istio (Maistra) installed (local)
  e2e_tests_local:
    working_directory: ~/.go_workspace/src/github.com/maistra/istio-workspace
    machine:
      <<: *machine-conf
    environment:
      <<: *env-vars
    steps:
      - checkout
      - run:
          name: "Checks for [skip-e2e] directive"
          command: |
            COMMIT_MSG=$(git log --format=oneline -n 1 $CIRCLE_SHA1)
            if [[ $COMMIT_MSG == *"[skip-e2e]"* ]]; then
              echo "[skip-e2e] detected. Explictly stopping e2e tests."
              circleci step halt
            fi
      - run:
          <<: *golang-install
      - run:
          name: "Installs telepresence"
          command: |
            cd ~
            pyenv global 3.5.2
            curl -s https://packagecloud.io/install/repositories/datawireio/telepresence/script.deb.sh | sudo bash
            sudo apt install --no-install-recommends telepresence
            telepresence --version
      - run:
          name: "Elasticsearch setup"
          command: |
            echo "vm.max_map_count = 262144" | sudo tee /etc/sysctl.d/99-elasticsearch.conf
            sudo sysctl vm.max_map_count=262144
      - run:
          name: "Configures Docker daemon with insecure-registry"
          command: |
            json=`mktemp`
            echo '{ "insecure-registries": [ "172.30.0.0/16", "registry.access.redhat.com", "docker-registry-default.127.0.0.1.nip.io:80", "default-route-openshift-image-registry.apps.yuaxu-maistra-daily.devcluster.openshift.com"] }' > ${json}
            sudo mv ${json} /etc/docker/daemon.json
            sudo service docker restart
            echo "Configured Docker daemon with insecure-registry"
      - run:
          name: "Installs Openshift and k8s"
          command: |
            cd ~
            wget "https://github.com/openshift/origin/releases/download/v3.11.0/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz" -O "oc.tar.gz"
            tar xzfv oc.tar.gz --wildcards "**/oc" --strip 1
            sudo mv $PWD/oc /usr/local/bin/
            echo "Installed oc\n$(oc version)\n"
            kube_version=$(oc version | grep kubernetes | cut -d'+' -f 1 | cut -d' ' -f 2)
            curl -LO https://storage.googleapis.com/kubernetes-release/release/${kube_version}/bin/linux/amd64/kubectl && \
            chmod +x kubectl && sudo mv kubectl /usr/local/bin/
            echo "Installed kubectl\n$(kubectl version)\n"
      - run:
          name: "Starts up the cluster"
          command: ./scripts/openshift/start-cluster.sh "${IKE_CLUSTER_DIR}"
      - run:
          name: "Installs Istio"
          command: ./scripts/openshift/deploy-istio.sh
      - restore_cache:
          keys:
            - golang-deps-e2e-cache-{{ checksum "Gopkg.lock" }}
      - run:
          name: "Runs end-to-end tests"
          command: TELEPRESENCE_VERSION=$(telepresence --version) make deps test-e2e
      - save_cache:
          key: golang-deps-e2e-cache-{{ checksum "Gopkg.lock" }}
          paths:
            - ./vendor
  ## End-to-end testing involving OpenShift cluster with Istio (Maistra) running remotely
  e2e_tests_remote:
    working_directory: ~/.go_workspace/src/github.com/maistra/istio-workspace
    machine:
      <<: *machine-conf
    environment:
      <<: *env-vars
      IKE_CLUSTER_VERSION: 4
    steps:
      - checkout
      - run:
          name: "Checks for [skip-e2e] directive"
          command: |
            COMMIT_MSG=$(git log --format=oneline -n 1 $CIRCLE_SHA1)
            if [[ $COMMIT_MSG == *"[skip-e2e]"* ]]; then
              echo "[skip-e2e] detected. Explictly stopping e2e tests."
              circleci step halt
            fi
      - run:
          <<: *golang-install
      - run:
          name: "Installs telepresence"
          command: |
            cd ~
            pyenv global 3.5.2
            curl -s https://packagecloud.io/install/repositories/datawireio/telepresence/script.deb.sh | sudo bash
            sudo apt install --no-install-recommends telepresence
            telepresence --version
      - run:
          name: "Configures Docker daemon with insecure-registry"
          command: |
            json=`mktemp`
            echo '{ "insecure-registries": [ "172.30.0.0/16", "registry.access.redhat.com", "docker-registry-default.127.0.0.1.nip.io:80", "default-route-openshift-image-registry.apps.yuaxu-maistra-daily.devcluster.openshift.com"] }' > ${json}
            sudo mv ${json} /etc/docker/daemon.json
            sudo service docker restart
            echo "Configured Docker daemon with insecure-registry"
      - run:
          name: "Installs Openshift and k8s client tools"
          command: |
            cd ~
            wget "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/4.2.8/openshift-client-linux-4.2.8.tar.gz" -O "oc.tar.gz"
            tar xzfv oc.tar.gz
            sudo mv $PWD/oc /usr/local/bin/
            echo "Installed oc\n$(oc version)\n"
            chmod +x kubectl && sudo mv kubectl /usr/local/bin/
            echo "Installed kubectl\n$(kubectl version)\n"
      - restore_cache:
          keys:
            - golang-deps-e2e-cache-{{ checksum "Gopkg.lock" }}
      - run:
          name: "Runs end-to-end tests"
          command: |
            IKE_CLUSTER_USER=$QE_IKE_CLUSTER_USER \
            IKE_CLUSTER_PWD=$QE_IKE_CLUSTER_PWD \
            IKE_CLUSTER_HOST=$QE_IKE_CLUSTER_HOST \
            ISTIO_NS=$QE_ISTIO_NS \
            IKE_CLUSTER_ADDRESS=$QE_CLUSTER_ADDRESS \
            make deps test-e2e
      - save_cache:
          key: golang-deps-e2e-cache-{{ checksum "Gopkg.lock" }}
          paths:
            - ./vendor

  release:
    working_directory: ~/.go_workspace/src/github.com/maistra/istio-workspace
    machine:
      <<: *machine-conf
    environment:
      <<: *env-vars
    steps:
      - checkout
      - run:
          name: "Validate release"
          command: |
            ./scripts/validate.sh "${CIRCLE_TAG}"
      - run:
          name: "Installs release tools prerequisites"
          command: |
            cd ~
            gem install asciidoctor
            wget "https://github.com/jgm/pandoc/releases/download/2.9/pandoc-2.9-linux-amd64.tar.gz" -O "pandoc.tar.gz"
            tar xzfv pandoc.tar.gz
            sudo mv $PWD/pandoc-2.9/bin/pandoc /usr/local/bin/
      - run:
          <<: *golang-install
      - run:
          name: "Sets up Quay.io"
          command: |
            mkdir -p ~/.docker && chmod 0700 ~/.docker
            touch ~/.docker/config.json && chmod 0600 ~/.docker/config.json
            echo $QUAY_AUTH_JSON > ~/.docker/config.json
            docker login quay.io
      - run:
          name: "Push it!"
          command: |
            make deps docker-build docker-push-versioned
      - run:
          name: "Release it!"
          command: |
            asciidoctor -b docbook -a leveloffset=+1 -o - docs/modules/ROOT/pages/release_notes/${CIRCLE_TAG}.adoc | pandoc --atx-headers --wrap=preserve -t markdown_strict -f docbook - 1> converted-release-notes.md
            curl -sL https://git.io/goreleaser | bash -s -- release --rm-dist --release-notes=converted-release-notes.md

workflows:
  version: 2.1
  circleci_build:
    jobs:
      - build
  circleci_e2e_tests:
    jobs:
      - e2e_tests_local
      - e2e_tests_remote
  circleci_release:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - release:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
