// Code generated for package assets by go-bindata DO NOT EDIT. (@generated)
// sources:
// deploy/istio-workspace/cluster_role.yaml
// deploy/istio-workspace/service_account.yaml
// deploy/istio-workspace/operator.yaml
// deploy/istio-workspace/operator.tpl.yaml
// deploy/istio-workspace/role.yaml
// deploy/istio-workspace/crds/maistra_v1alpha1_session_cr.yaml
// deploy/istio-workspace/crds/maistra_v1alpha1_session_crd.yaml
// deploy/istio-workspace/olm-catalog/istio-workspace/manifests/istio-workspace.clusterserviceversion.yaml
// deploy/istio-workspace/olm-catalog/istio-workspace/manifests/maistra_v1alpha1_session_crd.yaml
// deploy/istio-workspace/role_binding.yaml
// deploy/istio-workspace/cluster_role_binding.yaml
package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _deployIstioWorkspaceCluster_roleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x53\xcd\x8e\xd4\x30\x0c\xbe\xf7\x29\xa2\xbd\xac\x84\xd4\xae\xb8\xa1\x5e\x39\x70\xe3\x80\x10\x77\x6f\xea\xce\x5a\x93\xc4\x91\xed\x14\x31\x4f\x8f\xd2\x29\x4c\x07\xda\x41\x95\xe8\xa9\x71\x62\x7f\x3f\xf9\x02\x99\xbe\xa1\x28\x71\xea\x9d\xbc\x82\xef\xa0\xd8\x1b\x0b\x5d\xc0\x88\x53\x77\xfe\xa0\x1d\xf1\xcb\xf4\xbe\x39\x53\x1a\x7a\xf7\x31\x14\x35\x94\x2f\x1c\xb0\x89\x68\x30\x80\x41\xdf\x38\xe7\x05\xe7\x86\xaf\x14\x51\x0d\x62\xee\x5d\x2a\x21\x34\xce\x25\x88\xd8\x3b\x52\x23\x6e\xbf\xb3\x9c\x35\x83\xc7\x46\x4a\x40\xad\x8d\xad\x83\x4c\x9f\x84\x4b\x9e\x97\xf5\x6b\xdd\xd3\xd3\xfc\x2b\xa8\x5c\xc4\xe3\x6a\x27\xf3\xa0\xbf\x17\x8a\x32\x91\xc7\x5b\x01\xd3\x90\x99\x92\xdd\x2a\xb9\x6a\x53\xc3\x64\x13\x87\x12\xd1\x07\xa0\xb8\x6a\x98\x70\x7d\xda\x73\x1a\xe9\x14\x21\xaf\x31\xbc\xe0\x72\x64\x42\x79\x5d\x71\x79\x7e\xf7\x7c\x5c\x40\xb5\x63\xb6\x60\x73\xe4\x09\x6d\x6f\x24\xe4\x85\xd5\xc6\xd0\x01\x73\xe0\x1f\xf1\x4e\xcb\x00\x18\x39\x29\xae\x4a\x82\x39\x90\x87\xbb\x9a\x1a\x18\x8e\x25\xe8\x71\x91\x95\x51\xc7\x19\x93\xbe\xd1\x68\x1d\xf1\xbf\xe9\x5d\x0d\x3e\x0a\x14\x39\x91\xb1\x50\x3a\x75\x9e\x05\x59\x3b\xcf\x71\x0f\x6c\x09\xc5\xd2\xf3\xc0\xe5\xe5\xca\x6b\x70\x71\x0f\x79\x8e\xed\x4a\xe3\x03\xdc\x2b\xff\x23\xb2\x12\x5a\x7d\x10\x55\xd6\x15\x67\xdf\xc1\xe3\xc3\x23\x90\x9a\xc0\x7f\x9b\xb9\x11\xc0\xcf\x35\xca\xbf\x76\xff\x7c\xe0\x1b\xa0\x77\x39\x7d\x19\x29\x41\xa0\x0b\xfe\x7d\x45\xad\x2b\x79\xa8\x97\xf2\x33\x00\x00\xff\xff\x5c\xef\x50\x14\x9c\x04\x00\x00")

func deployIstioWorkspaceCluster_roleYamlBytes() ([]byte, error) {
	return bindataRead(
		_deployIstioWorkspaceCluster_roleYaml,
		"deploy/istio-workspace/cluster_role.yaml",
	)
}

func deployIstioWorkspaceCluster_roleYaml() (*asset, error) {
	bytes, err := deployIstioWorkspaceCluster_roleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "deploy/istio-workspace/cluster_role.yaml", size: 1180, mode: os.FileMode(436), modTime: time.Unix(1585740871, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deployIstioWorkspaceService_accountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x31\x0e\x80\x30\x08\x00\xc0\x9d\x57\xf0\x01\x07\x57\x36\xdf\x60\xe2\x4e\x28\x03\x69\x0a\x4d\xc1\xfa\x7d\x8f\xa7\x3d\xba\xd2\xc2\x09\xf7\x09\xdd\xbc\x11\xde\xba\xb6\x89\x5e\x22\xf1\x7a\xc1\xd0\xe2\xc6\xc5\x04\x88\xce\x43\x09\x2d\xcb\xe2\xf8\x62\xf5\x9c\x2c\x0a\x7f\x00\x00\x00\xff\xff\x94\xa0\xb7\x3f\x46\x00\x00\x00")

func deployIstioWorkspaceService_accountYamlBytes() ([]byte, error) {
	return bindataRead(
		_deployIstioWorkspaceService_accountYaml,
		"deploy/istio-workspace/service_account.yaml",
	)
}

func deployIstioWorkspaceService_accountYaml() (*asset, error) {
	bytes, err := deployIstioWorkspaceService_accountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "deploy/istio-workspace/service_account.yaml", size: 70, mode: os.FileMode(436), modTime: time.Unix(1568823862, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deployIstioWorkspaceOperatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x4f\x8f\xda\x30\x10\xc5\xef\xf9\x14\x23\xee\x09\xa0\x4a\x55\xe5\x5b\x04\x54\x3d\xb4\x10\x51\xd4\x1e\x57\x83\x33\x80\x85\xff\xad\xed\x84\xcd\xb7\x5f\x99\x7f\x0a\x21\xb0\xcc\x29\xf1\xbc\x37\xbf\xb1\x1f\x5a\xf1\x8f\x9c\x17\x46\x33\x40\x6b\xfd\xb0\x1e\x27\x7b\xa1\x4b\x06\x53\xb2\xd2\x34\x8a\x74\x48\x14\x05\x2c\x31\x20\x4b\x00\x24\xae\x49\xfa\xf8\x05\xd1\xc0\x40\xf8\x20\x4c\x7a\x30\x6e\xef\x2d\x72\x3a\x36\xea\xcb\xc8\x7a\x94\x8d\xb2\x6f\xa9\xa6\x8f\x90\x22\x5f\x7f\xff\xb1\x2e\xd3\x52\xb8\xd0\x24\x00\x1a\x15\xdd\xdb\xbd\x25\x1e\xa7\x3b\xb2\x52\x70\xf4\x0c\xc6\x09\x80\x27\x49\x3c\x18\x77\xe2\x2a\x0c\x7c\xf7\xbb\xb5\xc8\x93\x55\x5e\x5c\x26\x90\xb2\x12\x03\x9d\x01\xad\x0b\xc7\x92\x37\xac\xa7\xb4\x17\x79\xb1\xfa\x1f\x20\x76\x2e\x8f\x10\x8b\x1b\x1d\x50\x68\x72\x2d\x7e\x0a\xe8\xb6\xad\xff\xd3\x99\x27\x57\x53\xeb\x8c\x1b\xa5\x50\x97\x5d\x99\xd8\xb7\x45\xa4\xeb\xae\xe0\xb4\xd7\xff\x7c\x35\xf9\xf5\x36\xcf\xff\xcc\xfe\x16\xf9\x64\x76\xa3\x01\xa8\x51\x56\xc4\x60\x30\xe8\xf5\x16\x8b\xe9\xd1\xd9\x67\xfa\xe9\x8c\x62\x9d\x06\xc0\x46\x90\x2c\x97\xb4\xb9\xef\x9c\x7b\x05\x86\x1d\xbb\x06\x93\x45\x4e\x2f\x7a\x51\xcc\x96\xf9\x6a\xb1\x7c\xc8\x7f\x1c\x1c\x80\x50\xb8\x25\x06\xef\x15\x36\x99\x30\x43\x85\xc2\x07\x87\xc3\x8e\x81\x7d\x15\xec\x75\x54\x51\x49\x59\x18\x29\x78\xc3\x20\x97\x07\x6c\x7c\x4b\xf1\x38\x7e\x38\x46\x29\x38\xe5\x9c\x9b\x4a\x87\x79\xaf\xf2\x33\x00\x00\xff\xff\xea\x30\x7f\x51\xbb\x03\x00\x00")

func deployIstioWorkspaceOperatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_deployIstioWorkspaceOperatorYaml,
		"deploy/istio-workspace/operator.yaml",
	)
}

func deployIstioWorkspaceOperatorYaml() (*asset, error) {
	bytes, err := deployIstioWorkspaceOperatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "deploy/istio-workspace/operator.yaml", size: 955, mode: os.FileMode(436), modTime: time.Unix(1593678008, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deployIstioWorkspaceOperatorTplYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x5d\x6f\xf2\x3a\x0c\xbe\xe7\x57\x58\x68\xb7\x63\xda\x6d\xee\xaa\xc1\xe1\xa0\x7d\x80\x4a\xb5\xa3\x73\x35\x99\xd4\xd0\xbc\xa4\x49\x96\xa4\xa0\x6a\xe2\xbf\xbf\x4a\xd7\x0e\xe8\xda\x75\xbe\xab\x63\xf9\xf9\xa8\xed\xbd\x50\x29\x83\x84\x72\x23\xd1\xd3\x08\x8d\x78\x25\xeb\x84\x56\x0c\x7c\x9d\x9c\x68\x43\xca\x65\x62\xeb\x27\x42\xdf\x1d\xee\x47\x06\x2d\xe6\xe4\xc9\x3a\x36\x02\xb8\x05\x85\x39\x31\x58\x3c\xce\xde\xa6\xcb\x87\xc7\x59\xfc\x16\xcf\xe6\x8b\x75\x12\xff\x3f\x02\x00\x48\xc9\x71\x2b\x8c\xaf\x7a\x8e\xa7\x9a\xef\xc9\x82\xa5\x9d\x70\xde\x96\x70\xcc\xc8\x12\xa4\x64\xa4\x2e\x29\x05\x91\xe3\x8e\x40\x38\xc0\x03\x0a\x89\x1b\x49\xe3\xaa\x89\xa5\xf7\x42\x58\x4a\x19\x78\x5b\x50\x95\x3a\xa0\x2c\x88\xc1\x7b\x81\xe5\x44\xe8\x3e\x22\xab\xe5\x7a\x91\x2c\x3b\xa9\xc4\x64\xb4\x13\x5e\xdb\x12\x84\x82\x63\x26\x78\x06\x3e\xa3\x9a\x03\x47\x05\x1b\x82\xad\x2e\x54\x3a\xc4\x21\xc7\x20\x06\x5b\x1c\x16\xcf\xd1\x7c\xf6\xf6\x12\x3d\xcf\x3a\xc0\x93\x8c\xaa\x52\xd0\xdb\x0b\xd0\xa3\xf0\x19\x88\x3d\xc1\x46\x28\xb4\xe5\x10\xae\x70\x5e\xe8\xdb\xa3\xb6\x7b\x67\x90\x53\x27\x7e\x12\xcd\x7b\xe0\x3d\xee\xae\xd1\xbd\x0e\x8a\x0b\x47\x83\x82\xc3\x58\x38\xdf\xc2\x7b\x9d\xc5\xeb\xc5\xf2\xa5\x07\xed\xf0\x39\x56\x0d\xe2\xef\x04\x7e\xc3\xf9\x2f\x4a\x1e\xfe\xad\x3c\x5d\xaf\xa2\x87\x9f\x8c\xad\x1c\x09\x92\x8e\xe8\x79\x36\x81\x27\xc2\x03\x01\xe5\xc6\x97\xb0\xd5\x16\xb8\x2c\x9c\x27\x0b\x47\x91\x52\x5d\xd3\x66\xb3\x45\xe9\xae\xe8\x8c\xc7\x23\xbd\xf9\x43\xdc\xd7\x83\xff\xb9\x3c\xd3\x6a\x78\x73\x52\xbe\xaa\xbd\x5c\x21\x34\xc6\x85\x8d\x09\xf9\x9c\x3c\xa6\xe8\x91\x55\x5f\x50\x0b\xfa\xfe\x0b\x43\x48\xdc\x90\x74\x4d\x65\xe8\x69\xfa\x4a\xa1\x71\x96\xc1\xcd\xc7\xc5\x6f\x38\x55\xef\xce\x10\x6f\xda\x58\x32\x52\x70\x74\x0c\xee\xeb\x8c\x23\x49\xdc\x6b\x7b\x06\xca\x83\x11\x4f\x2d\xf4\x01\xfc\x9f\x19\xc0\xd7\x1d\xb9\x40\x69\x59\x31\x64\x47\x97\x25\xbf\xa0\x35\x44\xec\xda\x9e\x4f\x43\xec\x41\x70\x8a\x38\xd7\x85\xf2\x2f\x03\x94\xb8\x56\x1e\x85\xaa\xef\xe0\x39\x6e\x07\xc5\x84\xa8\x76\xae\x61\xd6\x3a\x9c\xa7\xbb\x56\xba\x39\x63\xcd\xc3\xf9\xb6\x9c\xd8\x65\x26\x89\xe6\xa7\x16\x0e\xd7\x79\x8e\x2a\x65\xad\x74\xa0\x29\xf6\x6d\x52\x68\x77\xae\xab\x32\x18\xd3\x29\x60\x55\x48\xb9\xd2\x52\xf0\x92\x41\x24\x8f\x58\xba\x56\x15\xa9\x43\x57\xc3\xfe\x75\xbe\x8e\x66\xf3\x6e\x3e\x5a\xb5\xa7\x71\x6f\xd7\xd5\x72\x7a\x3e\xbb\x1d\xed\xfe\xb1\x3a\xff\xce\x29\xc4\x56\x90\x4c\x63\xda\x76\xbf\xd6\xef\x2b\xf4\x19\xfb\x9a\xe1\x49\xc0\xec\xa5\xb2\x5c\xcd\xe2\x28\x59\xc6\x3f\xf2\x61\x30\x6e\x8d\xca\x78\xf4\x37\x00\x00\xff\xff\xd1\xef\x0d\x97\x98\x07\x00\x00")

func deployIstioWorkspaceOperatorTplYamlBytes() ([]byte, error) {
	return bindataRead(
		_deployIstioWorkspaceOperatorTplYaml,
		"deploy/istio-workspace/operator.tpl.yaml",
	)
}

func deployIstioWorkspaceOperatorTplYaml() (*asset, error) {
	bytes, err := deployIstioWorkspaceOperatorTplYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "deploy/istio-workspace/operator.tpl.yaml", size: 1944, mode: os.FileMode(436), modTime: time.Unix(1593615600, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deployIstioWorkspaceRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x53\xc1\x8e\xd4\x30\x0c\xbd\xf7\x2b\xa2\xbd\xac\x84\xd4\xae\xb8\xa1\xfe\x00\x37\x0e\x08\x71\xf7\xa6\xee\xac\x35\x49\x1c\xd9\x4e\x11\xf3\xf5\x28\x9d\xc2\x74\xa0\x1d\x54\x69\x7b\x6a\x1c\xdb\xcf\xef\xf9\x05\x32\x7d\x47\x51\xe2\xd4\x3b\x79\x05\xdf\x41\xb1\x37\x16\xba\x80\x11\xa7\xee\xfc\x49\x3b\xe2\x97\xe9\x63\x73\xa6\x34\xf4\xee\x2b\x07\x6c\x22\x1a\x0c\x60\xd0\x37\xce\x79\xc1\x39\xf3\x1b\x45\x54\x83\x98\x7b\x97\x4a\x08\x8d\x73\x09\x22\xf6\x8e\xd4\x88\xdb\x1f\x2c\x67\xcd\xe0\xb1\x91\x12\x50\x6b\x61\xeb\x20\xd3\x67\xe1\x92\xe7\x63\xfd\x5a\xf7\xf4\x34\xff\x0a\x2a\x17\xf1\xb8\xba\xc9\x3c\xe8\x9f\x83\xa2\x4c\xe4\xf1\x16\xc0\x34\x64\xa6\x64\xb7\x48\xae\xa4\xd4\x30\xd9\xc4\xa1\x44\xf4\x01\x28\xae\x0a\x26\x5c\x67\x7b\x4e\x23\x9d\x22\xe4\x35\x86\x17\x5c\x52\x26\x94\xd7\xd5\x2c\xcf\x1f\x9e\x8f\x13\xa8\x72\xcc\x12\x6c\xb6\x3c\xa1\xed\xb5\x84\xbc\x4c\xb5\xd1\x74\xc0\x1c\xf8\x67\xbc\xe3\x32\x00\x46\x4e\x8a\xab\x90\x60\x0e\xe4\xe1\x2e\xa6\x06\x86\x63\x09\x7a\x9c\x64\x9d\xa8\xe3\x8c\x49\xdf\x68\xb4\x8e\xf8\xff\xe3\x5d\x05\x3e\x0a\x14\x39\x91\xb1\x50\x3a\x75\x9e\x05\x59\x3b\xcf\x71\x0f\x6c\x31\xc5\x52\xf3\x40\xe5\x65\xe5\xd5\xb8\xb8\x87\x3c\xdb\x76\xc5\xf1\x01\xee\x75\xfe\x23\xb4\x12\x5a\x7d\x10\x95\xd6\x15\x67\x5f\xc1\xe3\xcd\x23\x90\x9a\xc0\xbb\xf5\xdc\x30\xe0\x97\x6a\xe5\xdf\xb7\x7f\x3f\xf0\x0d\xd0\x3b\x9f\xbe\x8c\x94\x20\xd0\x05\xff\x5d\x51\xeb\x4a\x1e\xea\x52\x7e\x05\x00\x00\xff\xff\x2e\xd1\xd4\xd7\x95\x04\x00\x00")

func deployIstioWorkspaceRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_deployIstioWorkspaceRoleYaml,
		"deploy/istio-workspace/role.yaml",
	)
}

func deployIstioWorkspaceRoleYaml() (*asset, error) {
	bytes, err := deployIstioWorkspaceRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "deploy/istio-workspace/role.yaml", size: 1173, mode: os.FileMode(436), modTime: time.Unix(1593703185, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deployIstioWorkspaceCrdsMaistra_v1alpha1_session_crYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8b\xc1\x0d\xc2\x30\x10\x04\xff\xae\xe2\x1a\x30\x28\x5f\xb7\x81\xc4\x7f\x85\x17\x62\x48\xce\x96\xef\x12\x89\xee\x91\x49\x7e\xab\x9d\x19\xb4\x72\x67\xb7\x52\x35\xc9\x8a\x62\xde\x71\x29\xf5\xba\x4f\x58\xda\x8c\x29\x7c\x8a\xe6\x24\x37\xda\x50\xc2\x4a\x47\x86\x23\x05\x11\xc5\xca\x24\x4e\xf3\x68\x27\xb6\xc6\xc7\x40\xbd\x6e\xce\x31\x44\xfc\xdb\x98\x64\x26\x32\xfb\xff\x38\x32\x6a\x8e\x9b\x9d\xd7\x8e\x65\x63\x92\x37\xac\xea\xa8\xf9\x3c\xda\x78\xca\x1d\x5e\xf4\x65\x71\x9f\xc2\x2f\x00\x00\xff\xff\x83\x49\x12\xb0\xaf\x00\x00\x00")

func deployIstioWorkspaceCrdsMaistra_v1alpha1_session_crYamlBytes() ([]byte, error) {
	return bindataRead(
		_deployIstioWorkspaceCrdsMaistra_v1alpha1_session_crYaml,
		"deploy/istio-workspace/crds/maistra_v1alpha1_session_cr.yaml",
	)
}

func deployIstioWorkspaceCrdsMaistra_v1alpha1_session_crYaml() (*asset, error) {
	bytes, err := deployIstioWorkspaceCrdsMaistra_v1alpha1_session_crYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "deploy/istio-workspace/crds/maistra_v1alpha1_session_cr.yaml", size: 175, mode: os.FileMode(436), modTime: time.Unix(1593601479, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deployIstioWorkspaceCrdsMaistra_v1alpha1_session_crdYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x90\x31\x4f\xc5\x30\x0c\x84\xf7\xfc\x0a\x4b\xec\x0f\x75\x43\x59\x61\x03\x31\x80\xc4\xee\xd7\x9a\x62\xbd\xd4\x89\x72\x4e\x85\x84\xf8\xef\x28\x6d\xe1\x31\xfa\xbb\xd3\x9d\x6d\x2e\xfa\x26\x15\x9a\x2d\x12\x17\x95\x4f\x17\xeb\x13\x4e\x97\x3b\x9c\x34\xdf\xae\xc3\x59\x9c\x87\x70\x51\x9b\x22\xdd\x37\x78\x5e\x5e\x04\xb9\xd5\x51\x1e\xe4\x5d\x4d\x5d\xb3\x85\x45\x9c\x27\x76\x8e\x81\xc8\x78\x91\x48\x10\xec\x41\x0b\x2b\xbc\xf2\x49\x33\xdd\xa8\xb9\x54\x81\xab\xcd\x01\x45\xc6\x6e\x9f\x6b\x6e\x25\xd2\xd5\x76\x44\xa0\x8b\x44\x7b\xf1\xeb\x9e\xb6\x91\xa4\xf0\xc7\xff\xf4\x49\xe1\x9b\x52\x52\xab\x9c\xae\xdd\x1b\x84\xda\xdc\x12\xd7\x3f\x1c\x88\x30\xe6\x22\x91\x9e\x7b\x4d\xe1\x51\xa6\x40\xb4\xfe\xfe\x61\x1d\x38\x95\x0f\x1e\xba\xaf\x9d\xeb\x71\xec\xb1\x0e\x9c\xbd\x21\xd2\xd7\x77\xf8\x09\x00\x00\xff\xff\x73\x56\x85\xc4\x3c\x01\x00\x00")

func deployIstioWorkspaceCrdsMaistra_v1alpha1_session_crdYamlBytes() ([]byte, error) {
	return bindataRead(
		_deployIstioWorkspaceCrdsMaistra_v1alpha1_session_crdYaml,
		"deploy/istio-workspace/crds/maistra_v1alpha1_session_crd.yaml",
	)
}

func deployIstioWorkspaceCrdsMaistra_v1alpha1_session_crdYaml() (*asset, error) {
	bytes, err := deployIstioWorkspaceCrdsMaistra_v1alpha1_session_crdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "deploy/istio-workspace/crds/maistra_v1alpha1_session_crd.yaml", size: 316, mode: os.FileMode(436), modTime: time.Unix(1593701894, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deployIstioWorkspaceOlmCatalogIstioWorkspaceManifestsIstioWorkspaceClusterserviceversionYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\xdd\x6f\x1b\x37\x0c\x7f\xf7\x5f\x41\xf4\xc5\xc0\x80\x73\x5a\xac\xe8\x8a\x7b\x9a\xdb\x75\x5b\xb1\x25\x31\x92\x62\x7d\x28\x8a\x81\xd6\xd1\x36\x67\x7d\x4d\xe2\x39\xbd\x0e\xfb\xdf\x07\xe9\xce\xf1\xf9\x2b\x76\x86\xa0\x7c\xb1\x8f\x22\xc5\x1f\x3f\x44\x4a\xe8\xf9\x0f\x0a\x91\x9d\x2d\xc1\x79\x0a\x28\x2e\xc4\x91\x72\x81\x5c\xfa\x31\x17\xab\x17\xa8\xfd\x02\x5f\x0c\x96\x6c\xab\x12\xde\xea\x3a\x0a\x85\x5b\x0a\x2b\x56\xd4\xa9\x0e\x0c\x09\x56\x28\x58\x0e\x00\xd0\x5a\x27\x28\xec\x6c\x4c\x9f\x00\xa8\x4d\x41\x5f\xd0\x78\x4d\xb1\x84\xe1\xa7\xcf\xc3\xcc\x56\xe8\x71\xca\x9a\x85\x13\xfb\x0d\x46\x56\xf0\xde\x46\x41\xad\x07\x00\x16\x0d\x95\xc0\x51\xd8\x15\x77\x2e\x2c\xa3\x47\x45\xa3\xd5\xf3\xd1\xf3\xd1\xf7\x85\xa5\x2f\x52\xe0\x0f\xaf\x67\x2f\x69\x5a\x54\x1c\xa4\xe9\x34\xb2\x54\x09\x5e\xa3\xa2\x85\xd3\x15\x85\x41\xf4\xa4\x32\x2c\xcf\xb1\x05\x5d\xd1\x8c\x2d\xb7\x00\xe1\x9f\x7f\x07\x00\xaa\x8e\xe2\x4c\xa0\xe8\xea\x70\x68\xbd\xa2\xa8\x02\x7b\xc9\x51\xba\xc5\x19\xe9\x06\x2a\x5a\x91\x76\x1e\xd0\x56\x20\x14\x05\x9c\x05\xb4\x0d\x2c\xeb\x29\x05\x4b\x42\x11\x54\x1b\x2b\xb8\x63\x59\xb8\x5a\xa0\xe2\x28\x01\x95\xb0\x9d\xe7\x08\x38\x59\x50\x88\x69\x7f\x8e\x5e\x63\x73\x95\x7d\x7e\x9f\x7c\x86\x8f\x6b\x9f\x07\x00\xac\x9c\x4d\x2e\x14\x30\xc5\x48\xaf\x5e\xe6\x48\xc3\xb3\x67\x79\x13\x43\x15\xa3\x34\x9e\x3a\x0e\xb7\x21\x6c\x43\xbf\x76\x3e\x51\x45\x5e\xbb\xc6\x90\x95\xb8\x66\x15\x87\xc3\xdc\xad\x6e\xab\x27\x0a\xe4\x35\x2b\x8c\x25\xbc\xe8\x71\x23\x69\x52\xe2\x42\x5f\x12\xc0\xa0\xa8\xc5\xef\x38\x25\x1d\xb7\x17\x52\x2a\xfc\x71\x9b\x2d\xad\xd6\x35\xb9\x95\x71\x35\x7d\xf5\x7a\x5a\xdd\x67\xfc\x1e\x80\x04\x14\x9a\x37\x5d\xb6\xd6\x24\x64\xbc\x46\xa1\x1d\x5c\xbd\x52\xed\x93\x3e\x08\xf5\x2c\xb0\x8f\x84\x9b\xe8\xe1\xb8\x1f\x8a\x7d\x22\xe5\xac\x20\x5b\x0a\x7b\x38\x0b\xc0\x30\x3f\x80\xbe\x80\x54\xf4\xfb\x80\x95\x33\x06\x6d\x75\x48\x81\x97\xfb\xe2\x64\x57\x87\x44\x5b\x2f\x3e\x8e\x3f\xbc\xfd\xf5\xcf\xab\xf1\xe5\xbb\xdb\xc9\xf8\xed\xbb\x3d\x39\x80\x15\xea\x9a\x7e\x0e\xce\xec\x6f\x92\x68\xc6\xa4\xab\x1b\x9a\x1d\x5e\xed\xd6\x27\x28\x8b\xf2\x3e\x7b\xa3\x5e\x97\xf9\x34\x74\xda\x8c\x04\xc3\x9c\xe4\x6a\xdd\x04\xe2\xf0\xf3\x51\xc0\x93\xeb\x9f\x32\xdc\x6f\x83\x34\xd9\x3c\x0a\xe5\x7a\xf2\xee\x66\xfc\xe1\xfa\xe6\x41\x3c\xa7\xeb\x8f\x0d\xce\xa9\x84\xbf\x6b\x6c\x46\xec\x2e\x0c\xe6\x4e\x73\xb1\xa3\x56\x9e\x5b\x9d\xdd\x86\x93\x5a\xeb\x89\xd3\xac\x9a\x12\xc6\xfa\x0e\x9b\xb8\x27\x77\xba\x8e\x21\xf7\x8d\xb6\xb3\xc6\x9d\x13\x0a\xb9\x7b\xe4\xa6\x3c\x56\xca\xd5\x56\xae\x1e\xd8\xcf\x53\x30\x1c\xe3\x66\xb0\xa4\x30\x86\x3a\x4d\x95\xc1\x26\xae\xe8\xf9\x97\xe0\x6a\xbf\x75\x18\x8a\x75\xb7\xdc\xc5\xb3\x25\xe3\x5d\x15\xb7\x18\x1d\xb6\x6d\x26\xd9\xca\x3b\xb6\xb2\xcd\xf5\xa9\x03\x44\x21\x2b\x2b\xa7\x6b\x43\x4a\x23\x9b\x1d\xc5\x15\xed\x6a\x29\x67\x67\x3c\x37\xe8\x77\xed\xaa\x40\x5b\xa2\x2b\x0a\xd3\x1d\xb4\xc3\xef\x86\x4f\xe3\xf6\xfd\xe0\x3c\x61\x70\x4e\x72\xda\x20\xfa\x2d\x5f\x8e\x98\xec\xcd\xa2\x6d\x3e\x92\x71\x36\xd2\x0e\x7b\x3d\x77\x76\xf9\x51\x50\x68\x56\xeb\xf8\x34\xc1\x4a\xd8\x47\xce\x93\x8d\x0b\x9e\xc9\x88\xdd\x63\x1c\x69\x53\xf9\x14\x30\x8c\xb3\x2c\x2e\xb0\x9d\xf7\xee\x61\xa7\xa1\x74\xc5\xda\x69\x3f\x22\x97\xb9\x10\x03\xa1\xd0\x69\x6c\xf9\x64\xf6\x62\x74\x16\xb2\xbe\xd7\xff\x3f\x2c\x96\x24\x75\x84\x14\x96\x16\xc5\x39\xf9\x79\x1a\xd3\x5d\x3f\xfd\x86\x16\x8f\x1c\xa3\x3c\xde\x0e\x64\xe4\x60\xef\x3d\x7d\xf6\x2e\x66\x6c\x51\xf3\x57\x3a\x55\x2e\xb5\xaf\xfa\xe5\x71\x6e\xcf\xde\x5c\xcc\x36\x46\x37\x57\xd4\x4b\x57\xb5\xd8\x0a\x88\xb5\xf7\x2e\x08\x55\x25\x48\xa8\x5b\xe5\xf6\x4e\x7b\x7d\x67\xef\x67\xfa\x09\xd1\x5b\xb6\x73\x4d\x47\xa5\x67\xa8\x63\x5f\xfc\xb2\xd6\xc2\xe7\xee\x3d\xd6\xfa\xaa\xdf\x26\x97\xd4\xdc\xb9\x50\x75\xf0\xb3\xef\xf9\x9f\x90\x26\x1f\x28\x92\xed\xb6\xd4\x4e\xa1\x5e\x3f\x16\x3a\xff\x8b\xfc\x60\x68\x5f\x01\x06\xb9\x7f\xa7\x2b\x80\x0c\xb2\x2e\x01\xa3\xc6\xe5\x8f\x81\xaa\x05\x6e\x4e\x59\x3b\x6d\xc7\x69\x09\x7e\xb3\xb5\x44\xb2\x7d\x9d\x29\x06\x71\xf1\xeb\x61\xad\x37\xed\x22\x5c\xe2\x5f\x11\x97\xd9\xb2\xd4\x81\xa5\x29\x21\x3f\xf0\x06\x00\x3e\xb8\x15\x57\x14\xba\x29\x9d\xba\x2e\xe6\xa1\x7d\xc6\x33\x6c\xd0\xbb\x04\x1f\x7d\xa4\xfd\x17\x00\x00\xff\xff\x84\x58\xc2\x15\x6d\x0e\x00\x00")

func deployIstioWorkspaceOlmCatalogIstioWorkspaceManifestsIstioWorkspaceClusterserviceversionYamlBytes() ([]byte, error) {
	return bindataRead(
		_deployIstioWorkspaceOlmCatalogIstioWorkspaceManifestsIstioWorkspaceClusterserviceversionYaml,
		"deploy/istio-workspace/olm-catalog/istio-workspace/manifests/istio-workspace.clusterserviceversion.yaml",
	)
}

func deployIstioWorkspaceOlmCatalogIstioWorkspaceManifestsIstioWorkspaceClusterserviceversionYaml() (*asset, error) {
	bytes, err := deployIstioWorkspaceOlmCatalogIstioWorkspaceManifestsIstioWorkspaceClusterserviceversionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "deploy/istio-workspace/olm-catalog/istio-workspace/manifests/istio-workspace.clusterserviceversion.yaml", size: 3693, mode: os.FileMode(436), modTime: time.Unix(1593707353, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deployIstioWorkspaceOlmCatalogIstioWorkspaceManifestsMaistra_v1alpha1_session_crdYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x90\x31\x4f\xc5\x30\x0c\x84\xf7\xfc\x0a\x4b\xec\x0f\x75\x43\x59\x61\x03\x31\x80\xc4\xee\xd7\x9a\x62\xbd\xd4\x89\x72\x4e\x85\x84\xf8\xef\x28\x6d\xe1\x31\xfa\xbb\xd3\x9d\x6d\x2e\xfa\x26\x15\x9a\x2d\x12\x17\x95\x4f\x17\xeb\x13\x4e\x97\x3b\x9c\x34\xdf\xae\xc3\x59\x9c\x87\x70\x51\x9b\x22\xdd\x37\x78\x5e\x5e\x04\xb9\xd5\x51\x1e\xe4\x5d\x4d\x5d\xb3\x85\x45\x9c\x27\x76\x8e\x81\xc8\x78\x91\x48\x10\xec\x41\x0b\x2b\xbc\xf2\x49\x33\xdd\xa8\xb9\x54\x81\xab\xcd\x01\x45\xc6\x6e\x9f\x6b\x6e\x25\xd2\xd5\x76\x44\xa0\x8b\x44\x7b\xf1\xeb\x9e\xb6\x91\xa4\xf0\xc7\xff\xf4\x49\xe1\x9b\x52\x52\xab\x9c\xae\xdd\x1b\x84\xda\xdc\x12\xd7\x3f\x1c\x88\x30\xe6\x22\x91\x9e\x7b\x4d\xe1\x51\xa6\x40\xb4\xfe\xfe\x61\x1d\x38\x95\x0f\x1e\xba\xaf\x9d\xeb\x71\xec\xb1\x0e\x9c\xbd\x21\xd2\xd7\x77\xf8\x09\x00\x00\xff\xff\x73\x56\x85\xc4\x3c\x01\x00\x00")

func deployIstioWorkspaceOlmCatalogIstioWorkspaceManifestsMaistra_v1alpha1_session_crdYamlBytes() ([]byte, error) {
	return bindataRead(
		_deployIstioWorkspaceOlmCatalogIstioWorkspaceManifestsMaistra_v1alpha1_session_crdYaml,
		"deploy/istio-workspace/olm-catalog/istio-workspace/manifests/maistra_v1alpha1_session_crd.yaml",
	)
}

func deployIstioWorkspaceOlmCatalogIstioWorkspaceManifestsMaistra_v1alpha1_session_crdYaml() (*asset, error) {
	bytes, err := deployIstioWorkspaceOlmCatalogIstioWorkspaceManifestsMaistra_v1alpha1_session_crdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "deploy/istio-workspace/olm-catalog/istio-workspace/manifests/maistra_v1alpha1_session_crd.yaml", size: 316, mode: os.FileMode(420), modTime: time.Unix(1593707353, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deployIstioWorkspaceRole_bindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x31\x6f\x1b\x31\x0c\x85\xf7\xfb\x15\x84\xd1\xd5\x57\x74\x2b\xb4\xb9\x85\xd1\xa9\x45\x61\x1b\xd9\x79\x12\xcf\xc7\xf8\x4e\x54\x28\xca\x06\x12\xe4\xbf\x07\x96\xcf\x71\x90\xc1\xd1\x26\x3e\xe2\xbd\xf7\xf1\xc0\x31\x38\xd8\xd1\x94\x46\x34\x6a\x30\xf1\x03\x69\x66\x89\x0e\x6c\x1e\xb6\x92\x28\xe6\x81\x7b\x6b\x59\xbe\x1f\x7f\x34\x09\x15\x27\x32\xd2\xec\x1a\x80\x25\x44\x9c\xc8\xc1\xbf\xd5\xdf\xf5\xf6\xff\xea\xf7\xba\x01\x00\x08\x94\xbd\x72\xb2\xea\xb4\xd8\xa1\xee\xc9\xea\x62\x4e\xe8\x09\x7a\x51\x38\x0d\xec\x07\x50\x19\x09\x3a\x8e\x81\xe3\x1e\xf2\x20\x65\x0c\xd0\x11\x04\xea\x39\x52\x58\x54\x33\xa5\xa7\xc2\x4a\xc1\x81\x69\xa1\x3a\x3a\xe2\x58\xc8\x01\x67\x63\x59\x9e\x44\x0f\xd5\x77\x29\x89\x14\x4d\xb4\x91\xee\x91\xbc\xcd\x05\x2f\x90\x1b\x19\xe9\xd7\x25\xa8\x5a\x7c\x64\xd5\x0e\x7d\x8b\xc5\x06\x51\x7e\xc6\x73\xeb\xf6\xf0\x33\xcf\xbc\xe7\xe5\x89\x0c\x03\x1a\xba\xfa\x83\x99\xf9\x53\x7c\xd5\x72\xb9\x45\x9f\xdf\x35\x7e\x4b\x7a\x64\x4f\x2b\xef\xa5\x44\x9b\xc5\x7b\x46\x57\xb5\x4e\x1c\x7c\x7b\x79\xbf\xf0\xeb\xe5\x2a\x32\xd2\x86\xfa\x6b\xce\x0d\xf2\xcb\x8a\x95\xfd\x8f\x4a\x49\x77\xc8\x9b\xb7\x00\x00\x00\xff\xff\x0b\xb5\x61\x6a\x1b\x02\x00\x00")

func deployIstioWorkspaceRole_bindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_deployIstioWorkspaceRole_bindingYaml,
		"deploy/istio-workspace/role_binding.yaml",
	)
}

func deployIstioWorkspaceRole_bindingYaml() (*asset, error) {
	bytes, err := deployIstioWorkspaceRole_bindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "deploy/istio-workspace/role_binding.yaml", size: 539, mode: os.FileMode(436), modTime: time.Unix(1568823866, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deployIstioWorkspaceCluster_role_bindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x41\x6f\xdb\x30\x0c\x85\xef\xfe\x15\x44\xb0\x6b\x3c\xec\x36\xe8\x96\x05\xc1\x4e\x1b\x86\x24\xd8\x9d\x96\xe8\x98\x8b\x2d\x6a\x14\x95\x00\x2d\xfa\xdf\x8b\x28\x4e\x5b\xb4\x40\xaa\x9b\xf8\x88\xc7\xef\xbd\x23\xc7\xe0\x60\x4f\x53\x1a\xd1\xa8\xc1\xc4\x7f\x49\x33\x4b\x74\x60\xf3\xb0\x95\x44\x31\x0f\xdc\x5b\xcb\xf2\xf5\xf4\xad\x49\xa8\x38\x91\x91\x66\xd7\x00\x2c\x21\xe2\x44\x0e\x7e\xaf\x7e\x6d\x76\x7f\x56\xeb\x4d\x03\x00\x10\x28\x7b\xe5\x64\xd5\x69\xb1\x47\x3d\x90\xd5\xc5\x9c\xd0\x13\xf4\xa2\x70\x1e\xd8\x0f\xa0\x32\x12\x74\x1c\x03\xc7\x03\xe4\x41\xca\x18\xa0\x23\x08\xd4\x73\xa4\xb0\xa8\x66\x4a\xff\x0b\x2b\x05\x07\xa6\x85\xea\xe8\x84\x63\x21\x07\x9c\x8d\x65\x79\x16\x3d\x56\xdf\xa5\x24\x52\x34\xd1\x46\xba\x7f\xe4\x6d\x06\xbc\x86\x5c\x8f\x25\x1b\xe9\x56\x46\xfa\x71\xbd\x57\x9d\xde\x46\xd6\x0e\x7d\x8b\xc5\x06\x51\x7e\xc0\x0b\x7c\x7b\xfc\x9e\xe7\xd8\x97\xe5\x89\x0c\x03\x1a\xba\xfa\x83\x39\xfa\x3b\x8a\xaa\xe5\xf2\x4a\x70\x79\x37\x8a\x1d\xe9\x89\x3d\xad\xbc\x97\x12\x6d\x16\xef\x19\xdd\xd4\x3a\x71\xf0\xe5\xf1\xa5\xe8\xa7\x6b\x39\x32\xd2\x96\xfa\xdb\x9d\x0f\x59\x3f\x25\xad\x15\xfc\x54\x29\xe9\x4e\x01\xcd\x73\x00\x00\x00\xff\xff\x5a\x3b\x0c\xba\x29\x02\x00\x00")

func deployIstioWorkspaceCluster_role_bindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_deployIstioWorkspaceCluster_role_bindingYaml,
		"deploy/istio-workspace/cluster_role_binding.yaml",
	)
}

func deployIstioWorkspaceCluster_role_bindingYaml() (*asset, error) {
	bytes, err := deployIstioWorkspaceCluster_role_bindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "deploy/istio-workspace/cluster_role_binding.yaml", size: 553, mode: os.FileMode(436), modTime: time.Unix(1568823862, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"deploy/istio-workspace/cluster_role.yaml":                                                                deployIstioWorkspaceCluster_roleYaml,
	"deploy/istio-workspace/service_account.yaml":                                                             deployIstioWorkspaceService_accountYaml,
	"deploy/istio-workspace/operator.yaml":                                                                    deployIstioWorkspaceOperatorYaml,
	"deploy/istio-workspace/operator.tpl.yaml":                                                                deployIstioWorkspaceOperatorTplYaml,
	"deploy/istio-workspace/role.yaml":                                                                        deployIstioWorkspaceRoleYaml,
	"deploy/istio-workspace/crds/maistra_v1alpha1_session_cr.yaml":                                            deployIstioWorkspaceCrdsMaistra_v1alpha1_session_crYaml,
	"deploy/istio-workspace/crds/maistra_v1alpha1_session_crd.yaml":                                           deployIstioWorkspaceCrdsMaistra_v1alpha1_session_crdYaml,
	"deploy/istio-workspace/olm-catalog/istio-workspace/manifests/istio-workspace.clusterserviceversion.yaml": deployIstioWorkspaceOlmCatalogIstioWorkspaceManifestsIstioWorkspaceClusterserviceversionYaml,
	"deploy/istio-workspace/olm-catalog/istio-workspace/manifests/maistra_v1alpha1_session_crd.yaml":          deployIstioWorkspaceOlmCatalogIstioWorkspaceManifestsMaistra_v1alpha1_session_crdYaml,
	"deploy/istio-workspace/role_binding.yaml":                                                                deployIstioWorkspaceRole_bindingYaml,
	"deploy/istio-workspace/cluster_role_binding.yaml":                                                        deployIstioWorkspaceCluster_role_bindingYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"deploy": &bintree{nil, map[string]*bintree{
		"istio-workspace": &bintree{nil, map[string]*bintree{
			"cluster_role.yaml":         &bintree{deployIstioWorkspaceCluster_roleYaml, map[string]*bintree{}},
			"cluster_role_binding.yaml": &bintree{deployIstioWorkspaceCluster_role_bindingYaml, map[string]*bintree{}},
			"crds": &bintree{nil, map[string]*bintree{
				"maistra_v1alpha1_session_cr.yaml":  &bintree{deployIstioWorkspaceCrdsMaistra_v1alpha1_session_crYaml, map[string]*bintree{}},
				"maistra_v1alpha1_session_crd.yaml": &bintree{deployIstioWorkspaceCrdsMaistra_v1alpha1_session_crdYaml, map[string]*bintree{}},
			}},
			"olm-catalog": &bintree{nil, map[string]*bintree{
				"istio-workspace": &bintree{nil, map[string]*bintree{
					"manifests": &bintree{nil, map[string]*bintree{
						"istio-workspace.clusterserviceversion.yaml": &bintree{deployIstioWorkspaceOlmCatalogIstioWorkspaceManifestsIstioWorkspaceClusterserviceversionYaml, map[string]*bintree{}},
						"maistra_v1alpha1_session_crd.yaml":          &bintree{deployIstioWorkspaceOlmCatalogIstioWorkspaceManifestsMaistra_v1alpha1_session_crdYaml, map[string]*bintree{}},
					}},
				}},
			}},
			"operator.tpl.yaml":    &bintree{deployIstioWorkspaceOperatorTplYaml, map[string]*bintree{}},
			"operator.yaml":        &bintree{deployIstioWorkspaceOperatorYaml, map[string]*bintree{}},
			"role.yaml":            &bintree{deployIstioWorkspaceRoleYaml, map[string]*bintree{}},
			"role_binding.yaml":    &bintree{deployIstioWorkspaceRole_bindingYaml, map[string]*bintree{}},
			"service_account.yaml": &bintree{deployIstioWorkspaceService_accountYaml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
