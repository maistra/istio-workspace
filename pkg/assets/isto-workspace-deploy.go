// Package assets Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// deploy/istio-workspace/service_account.yaml
// deploy/istio-workspace/operator.yaml
// deploy/istio-workspace/role.yaml
// deploy/istio-workspace/crds/istio_v1alpha1_session_crd.yaml
// deploy/istio-workspace/role_binding.yaml
package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _deployIstioWorkspaceService_accountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x31\x0e\x80\x30\x08\x00\xc0\x9d\x57\xf0\x01\x07\x57\x36\xdf\x60\xe2\x4e\x28\x03\x69\x0a\x4d\xc1\xfa\x7d\x8f\xa7\x3d\xba\xd2\xc2\x09\xf7\x09\xdd\xbc\x11\xde\xba\xb6\x89\x5e\x22\xf1\x7a\xc1\xd0\xe2\xc6\xc5\x04\x88\xce\x43\x09\x2d\xcb\xe2\xf8\x62\xf5\x9c\x2c\x0a\x7f\x00\x00\x00\xff\xff\x94\xa0\xb7\x3f\x46\x00\x00\x00")

func deployIstioWorkspaceService_accountYamlBytes() ([]byte, error) {
	return bindataRead(
		_deployIstioWorkspaceService_accountYaml,
		"deploy/istio-workspace/service_account.yaml",
	)
}

func deployIstioWorkspaceService_accountYaml() (*asset, error) {
	bytes, err := deployIstioWorkspaceService_accountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "deploy/istio-workspace/service_account.yaml", size: 70, mode: os.FileMode(436), modTime: time.Unix(1554454542, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deployIstioWorkspaceOperatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xc1\x6e\xc2\x38\x10\xbd\xf3\x15\x23\xd4\x6b\x69\xb9\xe6\x16\x41\x96\x45\x6d\x21\x0a\xd9\xae\xf6\x84\x06\x67\x20\x5e\x1c\xdb\xb5\x1d\x50\x54\xf1\xef\x2b\x87\x50\x68\x1a\x9a\xf5\x2d\x33\xe3\x79\x6f\x5e\x9e\x67\xcf\x65\x16\x40\x4a\x85\x16\xe8\x68\x80\x9a\xbf\x93\xb1\x5c\xc9\x00\x5c\x13\x1c\x29\x4d\xd2\xe6\x7c\xeb\x46\x5c\x3d\x1d\xc6\x03\x8d\x06\x0b\x72\x64\x6c\x30\x00\x78\x04\x89\x05\x05\x30\x7f\x89\xd6\xd3\xe5\xe4\x25\x4a\xd6\x49\x34\x9b\xaf\xd2\xe4\x9f\x01\x00\x40\x46\x96\x19\xae\x5d\xdd\x73\x38\x55\x6c\x4f\x06\x0c\xed\xb8\x75\xa6\x82\x63\x4e\x86\x20\x23\x2d\x54\x45\x19\xf0\x02\x77\x04\xdc\x02\x1e\x90\x0b\xdc\x08\x1a\xd6\x4d\x0c\x7d\x94\xdc\x50\x16\x80\x33\x25\xd5\xa1\x03\x8a\x92\x02\xf8\x28\xb1\x1a\x71\x75\x8f\x48\xbc\x5c\xcd\xd3\x65\x27\x95\x84\xb4\xb2\xdc\x29\x53\x01\x97\x70\xcc\x39\xcb\xc1\xe5\xd4\x70\x60\x28\x61\x43\xb0\x55\xa5\xcc\xfa\x38\x14\xe8\x87\xc1\x16\x87\xf9\x5b\x38\x8b\xd6\x8b\xf0\x2d\xea\x00\x4f\x73\xaa\x4b\x41\x6d\x6f\x40\x8f\xdc\xe5\xc0\xf7\x04\x1b\x2e\xd1\x54\x7d\xb8\xdc\x3a\xae\x1e\x8f\xca\xec\xad\x46\x46\x9d\xf8\x69\x38\xbb\x03\xef\x70\xf7\x1d\xdd\x29\x3f\x71\x69\xa9\x77\x60\x6f\x0b\xeb\x6e\xf0\xd2\xe8\x35\x8a\x93\x68\x15\x2d\x26\xd1\xfa\x3d\x4a\x56\xf3\xe5\xa2\x03\xf6\x2f\x99\x91\x11\x15\x97\x3b\x48\x49\x90\x36\x64\x49\x32\x82\xc3\xd9\x73\x35\xb6\xa7\x71\xf6\x03\x70\x67\xcf\xd4\xac\xf7\x89\x04\x7b\x44\xad\xfd\xe5\x73\xbe\x20\xe9\x0b\x64\x3d\x02\x13\xa5\x75\x64\xfa\x98\x0f\x9f\x47\xe3\xe7\xf1\x70\xa0\x36\xff\x12\x73\x8d\x81\xcf\x8f\x60\xfa\xd5\xb4\xbe\x70\xfb\x14\x50\x6b\xeb\x9d\xef\xe3\x05\x39\xcc\xd0\x61\x50\x7f\x41\x23\xc0\xcf\x5f\xe1\x8f\xc0\x0d\x09\x7b\xa9\xf4\x3d\xf5\xbd\x52\xb8\x88\x10\xc0\xc3\xa7\xff\x7d\x8d\x8a\xa7\x3a\x6f\x35\xb1\x4b\x1b\x43\x5a\x70\x86\x36\x80\x71\x13\xb1\x24\x88\x39\x65\xae\x40\x05\x3a\x96\xbf\xb6\xd0\x7b\xf0\x7f\x67\x00\x5f\xfb\xe0\x06\xa5\x25\x45\x9f\x1c\x5d\x92\xfc\x0f\x5a\x7d\xc4\xbe\xcb\x73\x16\xc4\x1c\x38\xa3\x90\x31\x55\x4a\xb7\xe8\xa1\xc4\x94\x74\xc8\x65\xb3\xcf\xae\xe7\xb1\x77\x18\x7f\x6a\x83\x5e\x98\xb5\x16\xe0\xe9\xa9\x15\xbe\xac\xa3\x4b\xe2\xba\x23\x4e\xc1\x6d\x24\x0d\x67\xa7\x16\x0e\x53\x45\x81\x32\x0b\x5a\x61\x4f\x93\xef\xdb\xa4\xd0\xec\x6c\x57\xa5\x17\xa6\x73\x80\xb8\x14\x22\x56\x82\xb3\x2a\x80\x50\x1c\xb1\xb2\xad\x2a\x92\x87\xae\x86\x67\x85\xfe\x0e\xd3\xc9\x9f\xf5\x18\xab\x38\x9c\x44\x3f\xea\xae\xcf\x6f\x78\xb7\x47\xbc\x9c\x5e\x97\x65\xc7\xe5\x3f\x8c\x2a\x7e\x32\xf0\x67\xcb\x49\x64\x09\x6d\xbb\xb3\x4d\x3e\x46\x97\x07\x5f\x8e\x1d\x79\xcc\xbb\x54\x96\x71\x94\x84\xe9\x32\xf9\x95\x4f\x00\xc3\x96\x31\xee\xcf\x76\x77\x3d\x76\xf7\x7d\xf8\xec\xba\x70\x1a\x0e\xfe\x0b\x00\x00\xff\xff\xfc\x36\xc0\x19\xae\x07\x00\x00")

func deployIstioWorkspaceOperatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_deployIstioWorkspaceOperatorYaml,
		"deploy/istio-workspace/operator.yaml",
	)
}

func deployIstioWorkspaceOperatorYaml() (*asset, error) {
	bytes, err := deployIstioWorkspaceOperatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "deploy/istio-workspace/operator.yaml", size: 1966, mode: os.FileMode(436), modTime: time.Unix(1565343399, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deployIstioWorkspaceRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x53\x4f\x6b\xeb\x30\x0c\xbf\xe7\x53\x98\x5e\x0a\x0f\x9a\xc7\xbb\x3d\x72\xdd\x61\xf7\x31\x76\x57\x1d\xb5\x15\xb5\x2d\x23\xc9\x19\xdb\xa7\x1f\x4e\xc3\x9a\x42\xd3\x91\xe5\x14\x2b\xd2\xef\x5f\x64\xc8\xf4\x86\xa2\xc4\xa9\x73\xb2\x07\xdf\x42\xb1\x13\x0b\x7d\x82\x11\xa7\xf6\xfc\x5f\x5b\xe2\xbf\xc3\xbf\xe6\x4c\xa9\xef\xdc\x53\x28\x6a\x28\x2f\x1c\xb0\x89\x68\xd0\x83\x41\xd7\x38\xe7\x05\xc7\x81\x57\x8a\xa8\x06\x31\x77\x2e\x95\x10\x1a\xe7\x12\x44\xec\x1c\xa9\x11\xef\xde\x59\xce\x9a\xc1\x63\x23\x25\xa0\xd6\xc1\x9d\x83\x4c\xcf\xc2\x25\x8f\xc7\xfa\xec\xdc\x66\x33\xbe\x0a\x2a\x17\xf1\x38\xfb\x92\xb9\xd7\xef\x83\xa2\x0c\xe4\xf1\x5a\xc0\xd4\x67\xa6\x64\xd7\x4a\xae\xde\xd4\x30\xd9\xc0\xa1\x44\xf4\x01\x28\xce\x06\x06\x9c\x77\x7b\x4e\x07\x3a\x46\xc8\x73\x0e\x2f\x38\xb5\x0c\x28\xfb\x99\x96\xed\x9f\xed\x7a\x03\x35\x8e\x31\x82\xbb\x90\x47\xb4\x25\x48\xc8\x93\xaa\x3b\xa0\x3d\xe6\xc0\x1f\xf1\xc6\x4b\x0f\x18\x39\x29\xce\x4a\x82\x39\x90\x87\x9b\x9a\x1a\x18\x1e\x4a\xd0\xf5\x26\xab\xa2\x96\x33\x26\x3d\xd1\xc1\x5a\xe2\x9f\xe5\x5d\x02\x5e\x4b\x14\x39\x91\xb1\x50\x3a\xb6\x9e\x05\x59\x5b\xcf\x71\x89\x6c\x5a\x8a\x69\xe6\x41\xca\xd3\x2f\xaf\x8b\x8b\x4b\xcc\xe3\xda\xce\x3c\x3e\xe0\xbd\xe8\x5f\x63\x2b\xa1\xd5\x0b\x51\x6d\x5d\x78\x96\x13\x5c\x0f\x1e\x81\xd4\x04\x7e\x87\xf9\x15\x00\x00\xff\xff\xb9\xb9\xb4\xf9\x15\x04\x00\x00")

func deployIstioWorkspaceRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_deployIstioWorkspaceRoleYaml,
		"deploy/istio-workspace/role.yaml",
	)
}

func deployIstioWorkspaceRoleYaml() (*asset, error) {
	bytes, err := deployIstioWorkspaceRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "deploy/istio-workspace/role.yaml", size: 1045, mode: os.FileMode(436), modTime: time.Unix(1565000888, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deployIstioWorkspaceCrdsIstio_v1alpha1_session_crdYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8f\xb1\x4e\xc4\x30\x10\x44\x7b\x7f\xc5\x7e\x41\x50\x3a\xe4\x16\x3a\x10\x05\x48\xf4\x7b\xc9\x72\xac\xce\xb1\x57\x9e\x75\x84\x84\xf8\x77\xe4\xe4\xe0\x52\xfa\xcd\x78\x66\x87\x4d\xdf\xa5\x42\x4b\x8e\xc4\xa6\xf2\xe5\x92\xfb\x0b\xc3\xe5\x1e\x83\x96\xbb\x75\x3c\x89\xf3\x18\x2e\x9a\xe7\x48\x0f\x0d\x5e\x96\x57\x41\x69\x75\x92\x47\xf9\xd0\xac\xae\x25\x87\x45\x9c\x67\x76\x8e\x81\x28\xf3\x22\x91\x20\xd8\x83\x16\x56\x78\xe5\x41\x4b\x80\xc9\xd4\x1d\xe7\x5a\x9a\x45\x3a\x28\xfb\x2f\x74\x91\x68\xef\x7a\xdb\x03\x36\x92\x14\xfe\x74\xa4\xcf\x0a\xdf\x14\x4b\xad\x72\xba\xd5\x6d\x10\x9a\xcf\x2d\x71\xfd\xc7\x81\x08\x53\x31\x89\xf4\xd2\x6b\x8c\x27\x99\x03\xd1\xfa\x37\x7d\x1d\x39\xd9\x27\x8f\xdd\xd7\x4e\xf5\xba\xef\x7a\x0e\x9c\xbd\x21\xd2\xf7\x4f\xf8\x0d\x00\x00\xff\xff\x22\x41\x9e\x9e\x2f\x01\x00\x00")

func deployIstioWorkspaceCrdsIstio_v1alpha1_session_crdYamlBytes() ([]byte, error) {
	return bindataRead(
		_deployIstioWorkspaceCrdsIstio_v1alpha1_session_crdYaml,
		"deploy/istio-workspace/crds/istio_v1alpha1_session_crd.yaml",
	)
}

func deployIstioWorkspaceCrdsIstio_v1alpha1_session_crdYaml() (*asset, error) {
	bytes, err := deployIstioWorkspaceCrdsIstio_v1alpha1_session_crdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "deploy/istio-workspace/crds/istio_v1alpha1_session_crd.yaml", size: 303, mode: os.FileMode(436), modTime: time.Unix(1565000888, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deployIstioWorkspaceRole_bindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x41\x6f\xdb\x30\x0c\x85\xef\xfe\x15\x44\xb0\x6b\x3c\xec\x36\xe8\x96\x05\xc1\x4e\x1b\x86\x24\xd8\x9d\x96\xe8\x98\x8b\x2d\x6a\x14\x95\x00\x2d\xfa\xdf\x8b\x28\x4e\x5b\xb4\x40\xaa\x9b\xf8\x88\xc7\xef\xbd\x23\xc7\xe0\x60\x4f\x53\x1a\xd1\xa8\xc1\xc4\x7f\x49\x33\x4b\x74\x60\xf3\xb0\x95\x44\x31\x0f\xdc\x5b\xcb\xf2\xf5\xf4\xad\x49\xa8\x38\x91\x91\x66\xd7\x00\x2c\x21\xe2\x44\x0e\x7e\xaf\x7e\x6d\x76\x7f\x56\xeb\x4d\x03\x00\x10\x28\x7b\xe5\x64\xd5\x69\xb1\x47\x3d\x90\xd5\xc5\x9c\xd0\x13\xf4\xa2\x70\x1e\xd8\x0f\xa0\x32\x12\x74\x1c\x03\xc7\x03\xe4\x41\xca\x18\xa0\x23\x08\xd4\x73\xa4\xb0\xa8\x66\x4a\xff\x0b\x2b\x05\x07\xa6\x85\xea\xe8\x84\x63\x21\x07\x9c\x8d\x65\x79\x16\x3d\x56\xdf\xa5\x24\x52\x34\xd1\x46\xba\x7f\xe4\x6d\x06\xbc\x86\x5c\x8f\x25\x1b\xe9\x56\x46\xfa\x71\xbd\x57\x9d\xde\x46\xd6\x0e\x7d\x8b\xc5\x06\x51\x7e\xc0\x0b\x7c\x7b\xfc\x9e\xe7\xd8\x97\xe5\x89\x0c\x03\x1a\xba\xfa\x83\x39\xfa\x3b\x8a\xaa\xe5\xf2\x4a\x70\x79\x37\x8a\x1d\xe9\x89\x3d\xad\xbc\x97\x12\x6d\x16\xef\x19\xdd\xd4\x3a\x71\xf0\xe5\xf1\xa5\xe8\xa7\x6b\x39\x32\xd2\x96\xfa\xdb\x9d\x0f\x59\x3f\x25\xad\x15\xfc\x54\x29\xe9\x4e\x01\xcd\x73\x00\x00\x00\xff\xff\x5a\x3b\x0c\xba\x29\x02\x00\x00")

func deployIstioWorkspaceRole_bindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_deployIstioWorkspaceRole_bindingYaml,
		"deploy/istio-workspace/role_binding.yaml",
	)
}

func deployIstioWorkspaceRole_bindingYaml() (*asset, error) {
	bytes, err := deployIstioWorkspaceRole_bindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "deploy/istio-workspace/role_binding.yaml", size: 553, mode: os.FileMode(436), modTime: time.Unix(1563385546, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"deploy/istio-workspace/service_account.yaml":                 deployIstioWorkspaceService_accountYaml,
	"deploy/istio-workspace/operator.yaml":                        deployIstioWorkspaceOperatorYaml,
	"deploy/istio-workspace/role.yaml":                            deployIstioWorkspaceRoleYaml,
	"deploy/istio-workspace/crds/istio_v1alpha1_session_crd.yaml": deployIstioWorkspaceCrdsIstio_v1alpha1_session_crdYaml,
	"deploy/istio-workspace/role_binding.yaml":                    deployIstioWorkspaceRole_bindingYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"deploy": &bintree{nil, map[string]*bintree{
		"istio-workspace": &bintree{nil, map[string]*bintree{
			"crds": &bintree{nil, map[string]*bintree{
				"istio_v1alpha1_session_crd.yaml": &bintree{deployIstioWorkspaceCrdsIstio_v1alpha1_session_crdYaml, map[string]*bintree{}},
			}},
			"operator.yaml":        &bintree{deployIstioWorkspaceOperatorYaml, map[string]*bintree{}},
			"role.yaml":            &bintree{deployIstioWorkspaceRoleYaml, map[string]*bintree{}},
			"role_binding.yaml":    &bintree{deployIstioWorkspaceRole_bindingYaml, map[string]*bintree{}},
			"service_account.yaml": &bintree{deployIstioWorkspaceService_accountYaml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
